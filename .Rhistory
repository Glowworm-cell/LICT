sample <- data.frame(number<-c(seq(1,5,1)))
for(i in 1:5){
count = c()
for(j in 1:5){
ft1 = df[,i]
ft2 = df[,j]
eruption.lm = lm(ft1 ~ ft2, data=faithful)
R.squared = round(summary(eruption.lm)$r.squared, 4)
count = c(count, R.squared)
data_frame_1 = data.frame(count)
}
sample = cbind(sample, data_frame_1)
}
View(sample)
sample = sample[1:nrow(sample), 2:ncol(sample)]
View(sample)
rownames = colnames(df)
colnames = colnames(df)
rownames(sample) = rownames
colnames(sample) = colnames
sample1 = t(sample)
library(pheatmap)
pheatmap(sample1, cluster_rows = F, cluster_cols = F)
View(sample1)
View(eruption.lm)
summary(eruption.lm)
summary(eruption.lm)$r.squared
eruption.lm$r.squared
df = df2[,c(2:6)]
colnames(df) = c('D0','Con-D14','NaB-D14','Con-D28','NaB-D28')
sample <- data.frame(number<-c(seq(1,5,1)))
for(i in 1:5){
count = c()
for(j in 1:5){
ft1 = df[,i]
ft2 = df[,j]
eruption.lm = lm(ft1 ~ ft2, data=faithful)
R.squared = round(summary(eruption.lm)$r.squared, 4)
count = c(count, R.squared)
data_frame_1 = data.frame(count)
}
sample = cbind(sample, data_frame_1)
}
sample = sample[1:nrow(sample), 2:ncol(sample)]
rownames = colnames(df)
colnames = colnames(df)
rownames(sample) = rownames
colnames(sample) = colnames
sample1 = t(sample)
cor(df)
cor(df, method = 'pearson')
cor(df, method = 'spearman')
#########
df1 = read_excel('./23MSA0737_29.xlsx')
df2 = read_excel('./23MSA0738_31.xlsx')
df3 = read_excel('./23MSA0739_1.xlsx')
df4 = read_excel('./23MSA0740_2.xlsx')
df5 = read_excel('./23MSA0734_27.xlsx')
df6 = read_excel('./23MSA0736_28.xlsx')
df1 = df1[,colnames(df1)%in%c('Name','RPKM')]
df = cbind(df1,df5$RPKM,df6$RPKM,df2$RPKM,df3$RPKM,df4$RPKM)
rownames(df) = df$Name
colnames(df) = c('Name','C_1','c_3','T14_C','T14_B','T28_C','T28_B')
df = df[,c(1,2:7)]
df1 = df
df = df[,c(2:7)]
df2 = df
df = df2[,c(2:6)]
cor(df, method = 'spearman')
View(df)
#########
df1 = read_excel('./23MSA0737_29.xlsx')
df2 = read_excel('./23MSA0738_31.xlsx')
df3 = read_excel('./23MSA0739_1.xlsx')
df4 = read_excel('./23MSA0740_2.xlsx')
df5 = read_excel('./23MSA0734_27.xlsx')
df6 = read_excel('./23MSA0736_28.xlsx')
df1 = df1[,colnames(df1)%in%c('Name','RPKM')]
df = cbind(df1,df5$RPKM,df6$RPKM,df2$RPKM,df3$RPKM,df4$RPKM)
rownames(df) = df$Name
colnames(df) = c('Name','C_1','c_3','T14_C','T14_B','T28_C','T28_B')
df = df[,c(1,2:7)]
df1 = df
df = df[,c(2:7)]
df2 = df
df = df2[,c(2:6)]
colnames(df) = c('D0','Con-D14','NaB-D14','Con-D28','NaB-D28')
#计算PCA
pca.info <- fast.prcomp(df)
#??fast.prcomp()
#显示PCA计算结果
#head(pca.info$rotation)
#计算Y1与Y28之间的差异
pca.data <- data.frame(sample = rownames(pca.info$rotation),Type = c('D0','Con-D14','NaB-D14','Con-D28','NaB-D28'),pca.info$rotation)
#绘图
ggscatter(pca.data,x = "PC1",y = "PC2",color = "Type", size = 5) + theme_base()+
scale_color_manual(values = c("#D14643","#E88236","#9E6B61","#58B4C4","#C57BAB",'red'))+
geom_text_repel(aes(label = Type), box.padding = 0.5)
df1 = t(df)
df2 = df1[,!colSums(df1)%in%c(0)]
pca <- prcomp(df2)  ###prcomp函数的横行必须是样本','所以倒置一下
pca.var <- pca$sdev^2  ## sdev是标准偏差','十个样本','就有十个标准偏差','平方是避免负数的干扰
pca.var.per <- round(pca.var/sum(pca.var)*100, 1)  ##求每个样本的variation
barplot(pca.var.per, main="Scree Plot", xlab="Principal Component", ylab="Percent Variation")  ##用柱状图可视化
pca.data <- data.frame(Sample=rownames(pca$x),
PC1=pca$x[,1],
PC2=pca$x[,2])
xlab = paste("PC1(",pca.var.per[1],"%","variance)",sep="")
ylab = paste("PC2(",pca.var.per[2],"%","variance)",sep="")
pca.data$Sample
p <- ggplot(data = pca.data,aes(x = PC1,y = PC2,color = Sample))+
stat_ellipse(aes(fill = Sample),
type = "norm",geom = "polygon",alpha = 0.25,color = NA)+ # 添加置信椭圆
geom_point(size = 3.5)+
labs(x = xlab,y = ylab,color = "Condition",title = "PCA Scores Plot")+
guides(fill = "none")+
theme_bw()+
scale_fill_manual(values = c("#D14643","#E88236","#9E6B61","#58B4C4","#C57BAB",'red'))+
scale_colour_manual(values = c("#D14643","#E88236","#9E6B61","#58B4C4","#C57BAB",'red'))+
theme(plot.title = element_text(hjust = 0.5,size = 15),
axis.text = element_text(size = 11),axis.title = element_text(size = 13),
legend.text = element_text(size = 11),legend.title = element_text(size = 13),
plot.margin = unit(c(0.4,0.4,0.4,0.4),'cm'))+
geom_text_repel(aes(label = Sample), box.padding = 0.5)
p
df = log(df+1)
df1 = t(df)
df2 = df1[,!colSums(df1)%in%c(0)]
pca <- prcomp(df2)  ###prcomp函数的横行必须是样本','所以倒置一下
pca.var <- pca$sdev^2  ## sdev是标准偏差','十个样本','就有十个标准偏差','平方是避免负数的干扰
pca.var.per <- round(pca.var/sum(pca.var)*100, 1)  ##求每个样本的variation
barplot(pca.var.per, main="Scree Plot", xlab="Principal Component", ylab="Percent Variation")  ##用柱状图可视化
pca.data <- data.frame(Sample=rownames(pca$x),
PC1=pca$x[,1],
PC2=pca$x[,2])
xlab = paste("PC1(",pca.var.per[1],"%","variance)",sep="")
ylab = paste("PC2(",pca.var.per[2],"%","variance)",sep="")
pca.data$Sample
p <- ggplot(data = pca.data,aes(x = PC1,y = PC2,color = Sample))+
stat_ellipse(aes(fill = Sample),
type = "norm",geom = "polygon",alpha = 0.25,color = NA)+ # 添加置信椭圆
geom_point(size = 3.5)+
labs(x = xlab,y = ylab,color = "Condition",title = "PCA Scores Plot")+
guides(fill = "none")+
theme_bw()+
scale_fill_manual(values = c("#D14643","#E88236","#9E6B61","#58B4C4","#C57BAB",'red'))+
scale_colour_manual(values = c("#D14643","#E88236","#9E6B61","#58B4C4","#C57BAB",'red'))+
theme(plot.title = element_text(hjust = 0.5,size = 15),
axis.text = element_text(size = 11),axis.title = element_text(size = 13),
legend.text = element_text(size = 11),legend.title = element_text(size = 13),
plot.margin = unit(c(0.4,0.4,0.4,0.4),'cm'))+
geom_text_repel(aes(label = Sample), box.padding = 0.5)
p
ggsave(
filename = "PCA2_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 7,             # 宽
height = 5,            # 高
units = "in",          # 单位
dpi = 300)
library(readxl)
library(ggplot2)
library(dplyr)
library(psych)
library(ggrepel)
library(DOSE)
kegg = read_excel('D:/R/zq/14Function_sub.xlsx)
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(2.5,4.5,2.5,4.5),y=0)
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:4]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
View(kegg)
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
View(kegg)
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
View(kegg)
kegg = subset(kegg , Num == 1)
View(kegg)
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(2.5,4.5,2.5,4.5),y=0)
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:9]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 45,vjust=0.7,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(133,198,265,326))+
geom_blank(data = blank_data, aes(x = x, y = y))
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
View(kegg)
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(2.5,4.5,2.5,4.5),y=0)
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
View(kegg)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 45,vjust=0.7,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(133,198,265,326))+
geom_blank(data = blank_data, aes(x = x, y = y))
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(2.5,4.5,2.5,4.5),y=0)
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(2.5,4.5,2.5,4.5),y=0)
View(kegg)
kegg$group = c(rep('Up',7),rep('Down',3))
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(-10.5,-3.5,2.5,10.5),y=0)
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
setwd('D:/R/zq/')
ggsave(
filename = "14function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 6,             # 宽
height = 3.5,            # 高
units = "in",          # 单位
dpi = 300)
kegg = read_excel('D:/R/zq/28Function_sub.xlsx')
kegg = read_excel('D:/R/zq/28Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
View(kegg)
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(-9.2,-3.2,2,6),y=0)
kegg$group = c(rep('Up',6),rep('Down',4))
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(7,50,90,110))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
setwd('D:/R/zq/')
ggsave(
filename = "28function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 6,             # 宽
height = 5.5,            # 高
units = "in",          # 单位
dpi = 300)
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(-10.5,-3.5,2.5,10.5),y=0)
kegg$group = c(rep('Up',7),rep('Down',3))
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(103,300,600,900,1339))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
kegg = read_excel('D:/R/zq/14Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(-10.5,-3.5,2.5,10.5),y=0)
kegg$group = c(rep('Up',7),rep('Down',3))
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(105,300,600,900,1167))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
setwd('D:/R/zq/')
ggsave(
filename = "14function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 7,             # 宽
height = 8            # 高
units = "in",          # 单位
ggsave(
filename = "14function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 7,             # 宽
height = 8,            # 高
units = "in",          # 单位
dpi = 300)
ggsave(
filename = "14function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 7,             # 宽
height = 6,            # 高
units = "in",          # 单位
dpi = 300)
kegg = read_excel('D:/R/zq/28Function_sub.xlsx')
kegg = subset(kegg , Num == 1)
library(stringr)
get_wraper <- function(width, line_spacing = 1) {
function(x) {
lapply(strwrap(x, width = width, simplify = FALSE), function(line) {
paste(rep("", line_spacing), line, collapse = "\n")
})
}
}
blank_data <- data.frame(group = c("Down","Down","Up","Up"),
x = c(-9.2,-3.2,2,6),y=0)
kegg$group = c(rep('Up',6),rep('Down',4))
kegg = kegg%>% #如果括号内等式左边的变量没有，将新建并合并新变量，如果有则变换变量
arrange(`Activation z-score`)
kegg$`Diseases or Functions Annotation` = factor(kegg$`Diseases or Functions Annotation`, levels =
c( kegg$`Diseases or Functions Annotation`[1:10]))
p<-ggplot(kegg,aes(x=`Activation z-score`,y = `Diseases or Functions Annotation`))
p
p+geom_point(aes(size=`# Molecules`,color=-1*log10(`p-value`)))+
facet_wrap(~group, scales = "free_x")+
scale_color_gradientn(colors = c('#ff8d8d','#ea5336',"#ff0000"))+#更改-log(p-value)颜色
ylab(NULL)+theme_bw()+#去掉y轴图示，并且将图案背景变白
theme(axis.text.y=element_text(vjust=0.5,size=12))+#y轴的坐标轴显示的文字大小
theme(axis.text.x=element_text(angle = 0,vjust=1,size=12))+#x轴的坐标轴显示的文字大小
theme(axis.title.x.bottom  =element_text(vjust=0,size=12))+#X轴底部的文字显示的文字大小
theme(axis.title.x.top  = element_text(vjust=0,size=12),
strip.text.x=element_text(size=12))+#顶部的文字大小
scale_size_continuous(range = c(5, 9),breaks = c(103,300,600,900,1339))+
geom_blank(data = blank_data, aes(x = x, y = y))+
scale_y_discrete(labels = get_wraper(40, line_spacing = 1))
setwd('D:/R/zq/')
ggsave(
filename = "28function_240717.pdf", # 保存的文件名称。通过后缀来决定生成什么格式的图片
width = 7,             # 宽
height = 6,            # 高
units = "in",          # 单位
dpi = 300)
devtools::check()
devtools::document()
devtools::build()
devtools::build()
packageVersion("ggplot2")
packageVersion("dplyr")
packageVersion("reticulate")
packageVersion("stringr")
packageVersion("magrittr")
packageVersion("roxygen2")
setwd('D:/R/LLMsCellType/240617embryo_different_method4/')
detach(package:LLMcellidentifier, unload=TRUE)
install.packages("D:/ywj/LLM514/LLMsCellIdentifier_0.1.0.tar.gz", repos = NULL, type = "source")
library(LLMsCellIdentifier)
